@model IEnumerable<Consultation>
@{
    ViewData["Title"] = "مشاوره‌های من";
}

<div class="min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 py-8">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- Enhanced Header -->
        <div class="bg-gradient-to-r from-green-600 to-emerald-700 rounded-2xl shadow-2xl p-8 mb-8 text-white transform hover:scale-[1.02] transition-all duration-300">
            <div class="flex items-center justify-between">
                <div class="flex items-center">
                    <div class="w-16 h-16 bg-white/20 backdrop-blur-sm rounded-2xl flex items-center justify-center ml-4 shadow-lg">
                        <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                        </svg>
                    </div>
                    <div>
                        <h1 class="text-3xl lg:text-4xl font-bold">مشاوره‌های من</h1>
                        <p class="text-green-100 mt-2">تاریخچه کامل و وضعیت مشاوره‌های شما</p>
                    </div>
                </div>
                <div class="hidden lg:flex items-center space-x-4 space-x-reverse">
                    <div class="bg-white/20 backdrop-blur-sm px-6 py-3 rounded-xl border border-white/30">
                        <span class="text-white font-medium">📋 @Model.Count() مشاوره</span>
                    </div>
                    <a href="@Url.Action("Index", "Doctors")" class="bg-white/20 backdrop-blur-sm text-white px-6 py-3 rounded-xl hover:bg-white/30 transition-all duration-200 border border-white/30 transform hover:scale-105 shadow-lg">
                        <svg class="w-5 h-5 inline ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                        </svg>
                        رزرو جدید
                    </a>
                </div>
            </div>
        </div>

        @if (Model.Any())
        {
            <div class="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6">
                @foreach (var consultation in Model)
                {
                    <div class="bg-white rounded-2xl shadow-xl hover:shadow-2xl transition-all duration-300 transform hover:scale-[1.02] border border-gray-100 overflow-hidden group">
                        <!-- Card Header -->
                        <div class="bg-gradient-to-r @(consultation.Status == ConsultationStatus.Completed ? "from-green-500 to-emerald-600" :
                                      consultation.Status == ConsultationStatus.Pending ? "from-yellow-500 to-orange-600" :
                                      consultation.Status == ConsultationStatus.InProgress ? "from-blue-500 to-indigo-600" :
                                      consultation.Status == ConsultationStatus.Confirmed ? "from-blue-500 to-indigo-600" :
                                      consultation.Status == ConsultationStatus.Cancelled ? "from-red-500 to-pink-600" :
                                      "from-gray-500 to-gray-600") p-6 text-white">
                            <div class="flex items-center justify-between">
                                <div class="flex items-center">
                                    @if (!string.IsNullOrEmpty(consultation.Doctor.ProfilePictureUrl))
                                    {
                                        <img src="@consultation.Doctor.ProfilePictureUrl" alt="تصویر دکتر @consultation.Doctor.FullName" 
                                             class="w-12 h-12 rounded-xl object-cover border-2 border-white/30 shadow-lg ml-3">
                                    }
                                    else if (consultation.Doctor.ProfilePicture != null && consultation.Doctor.ProfilePicture.Length > 0)
                                    {
                                        <img src="@Url.Action("GetDoctorProfilePicture", "Doctors", new { doctorId = consultation.Doctor.Id })" alt="تصویر دکتر @consultation.Doctor.FullName" 
                                             class="w-12 h-12 rounded-xl object-cover border-2 border-white/30 shadow-lg ml-3">
                                    }
                                    else
                                    {
                                        <div class="w-12 h-12 rounded-xl bg-white/20 backdrop-blur-sm flex items-center justify-center border-2 border-white/30 shadow-lg ml-3">
                                            <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                                            </svg>
                                        </div>
                                    }
                                    <div>
                                        <h3 class="text-lg font-bold">دکتر @consultation.Doctor.FullName</h3>
                                        <p class="text-white/80 text-sm">@consultation.Doctor.Specialization</p>
                                    </div>
                                </div>
                                <div class="text-right">
                                    <span class="inline-flex items-center px-3 py-1 rounded-xl text-xs font-bold bg-white/20 backdrop-blur-sm border border-white/30">
                                        @(consultation.Status == ConsultationStatus.Completed ? "✅ تکمیل شده" :
                                          consultation.Status == ConsultationStatus.Pending ? "⏳ در انتظار" :
                                          consultation.Status == ConsultationStatus.InProgress ? "🔄 در حال انجام" :
                                          consultation.Status == ConsultationStatus.Confirmed ? "✔️ تأیید شده" :
                                          consultation.Status == ConsultationStatus.Cancelled ? "❌ لغو شده" :
                                          consultation.Status.ToString())
                                    </span>
                                </div>
                            </div>
                        </div>

                        <!-- Card Body -->
                        <div class="p-6">
                            <!-- Consultation Info -->
                            <div class="grid grid-cols-2 gap-4 mb-6">
                                <div class="bg-gradient-to-r from-blue-50 to-indigo-50 p-4 rounded-xl border border-blue-100">
                                    <div class="flex items-center mb-2">
                                        <svg class="w-5 h-5 text-blue-600 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            @if (consultation.Type == ConsultationType.TextChat)
                                            {
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
                                            }
                                            else if (consultation.Type == ConsultationType.VoiceCall)
                                            {
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
                                            }
                                            else if (consultation.Type == ConsultationType.VideoCall)
                                            {
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                                            }
                                            else
                                            {
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
                                            }
                                        </svg>
                                        <span class="text-blue-800 font-medium text-sm">نوع مشاوره</span>
                                    </div>
                                    <p class="text-blue-700 font-bold">
                                        @(consultation.Type == ConsultationType.TextChat ? "💬 چت متنی" :
                                          consultation.Type == ConsultationType.VoiceCall ? "📞 تماس صوتی" :
                                          consultation.Type == ConsultationType.VideoCall ? "📹 تماس تصویری" :
                                          "🏥 حضوری")
                                    </p>
                                </div>

                                <div class="bg-gradient-to-r from-green-50 to-emerald-50 p-4 rounded-xl border border-green-100">
                                    <div class="flex items-center mb-2">
                                        <svg class="w-5 h-5 text-green-600 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
                                        </svg>
                                        <span class="text-green-800 font-medium text-sm">هزینه</span>
                                    </div>
                                    <p class="text-green-700 font-bold">💰 @(consultation.Fee?.ToString("N0") ?? "0") تومان</p>
                                </div>
                            </div>

                            <!-- Date & Time Info -->
                            <div class="space-y-3 mb-6">
                                <div class="flex items-center justify-between bg-gray-50 p-3 rounded-xl">
                                    <span class="text-gray-600 font-medium flex items-center">
                                        <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                        </svg>
                                        تاریخ رزرو
                                    </span>
                                    <span class="text-gray-800 font-bold">@consultation.CreatedAt.ToLocalTime().ToString("yyyy/MM/dd")</span>
                                </div>
                                <div class="flex items-center justify-between bg-gray-50 p-3 rounded-xl">
                                    <span class="text-gray-600 font-medium flex items-center">
                                        <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                        </svg>
                                        زمان مشاوره
                                    </span>
                                    <span class="text-gray-800 font-bold">@consultation.ScheduledAt.ToLocalTime().ToString("yyyy/MM/dd HH:mm")</span>
                                </div>
                            </div>

                            <!-- Action Buttons -->
                            <div class="flex space-x-3 space-x-reverse">
                                <a href="@Url.Action("Details", new { id = consultation.Id })" 
                                   class="flex-1 bg-gradient-to-r from-blue-500 to-indigo-600 text-white px-4 py-3 rounded-xl hover:from-blue-600 hover:to-indigo-700 transition-all duration-200 transform hover:scale-105 shadow-lg text-center font-medium">
                                    <svg class="w-4 h-4 inline ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                                    </svg>
                                    جزئیات کامل
                                </a>
                                
                                @if (consultation.Status == ConsultationStatus.Pending)
                                {
                                    <form asp-action="Cancel" method="post" class="flex-shrink-0" onsubmit="return confirm('آیا از لغو این مشاوره اطمینان دارید؟')">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="id" value="@consultation.Id" />
                                        <button type="submit" class="bg-gradient-to-r from-red-500 to-pink-600 text-white px-4 py-3 rounded-xl hover:from-red-600 hover:to-pink-700 transition-all duration-200 transform hover:scale-105 shadow-lg font-medium">
                                            <svg class="w-4 h-4 inline ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                                            </svg>
                                            لغو
                                        </button>
                                    </form>
                                }
                                else if (consultation.Status == ConsultationStatus.Confirmed || consultation.Status == ConsultationStatus.InProgress)
                                {
                                    <button class="flex-shrink-0 bg-gradient-to-r from-green-500 to-emerald-600 text-white px-4 py-3 rounded-xl hover:from-green-600 hover:to-emerald-700 transition-all duration-200 transform hover:scale-105 shadow-lg font-medium">
                                        <svg class="w-4 h-4 inline ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.828 14.828a4 4 0 01-5.656 0M9 10h1.01M15 10h1.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                        </svg>
                                        شروع
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="bg-white rounded-2xl shadow-xl p-12 text-center transform hover:scale-[1.02] transition-all duration-300">
                <div class="w-32 h-32 bg-gradient-to-br from-blue-100 to-indigo-200 rounded-full flex items-center justify-center mx-auto mb-8 shadow-lg">
                    <svg class="w-16 h-16 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                    </svg>
                </div>
                <h3 class="text-2xl font-bold text-gray-900 mb-4">🩺 هنوز مشاوره‌ای نداشته‌اید</h3>
                <p class="text-gray-600 text-lg mb-8 max-w-md mx-auto">برای شروع، یک پزشک متخصص انتخاب کرده و اولین نوبت خود را رزرو کنید</p>
                
                <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8 max-w-2xl mx-auto">
                    <div class="bg-gradient-to-r from-blue-50 to-indigo-50 p-6 rounded-xl border border-blue-100">
                        <div class="w-12 h-12 bg-blue-500 rounded-xl flex items-center justify-center mx-auto mb-3">
                            <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                            </svg>
                        </div>
                        <h4 class="font-bold text-blue-800 mb-2">یافتن پزشک</h4>
                        <p class="text-blue-600 text-sm">انتخاب پزشک متخصص</p>
                    </div>
                    
                    <div class="bg-gradient-to-r from-green-50 to-emerald-50 p-6 rounded-xl border border-green-100">
                        <div class="w-12 h-12 bg-green-500 rounded-xl flex items-center justify-center mx-auto mb-3">
                            <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                            </svg>
                        </div>
                        <h4 class="font-bold text-green-800 mb-2">رزرو نوبت</h4>
                        <p class="text-green-600 text-sm">انتخاب تاریخ و ساعت</p>
                    </div>
                    
                    <div class="bg-gradient-to-r from-purple-50 to-pink-50 p-6 rounded-xl border border-purple-100">
                        <div class="w-12 h-12 bg-purple-500 rounded-xl flex items-center justify-center mx-auto mb-3">
                            <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
                            </svg>
                        </div>
                        <h4 class="font-bold text-purple-800 mb-2">شروع مشاوره</h4>
                        <p class="text-purple-600 text-sm">دریافت خدمات پزشکی</p>
                    </div>
                </div>
                
                <a href="@Url.Action("Index", "Doctors")" class="inline-flex items-center bg-gradient-to-r from-blue-600 to-indigo-700 text-white px-8 py-4 rounded-2xl hover:from-blue-700 hover:to-indigo-800 transition-all duration-200 transform hover:scale-105 shadow-xl font-bold text-lg">
                    <svg class="w-6 h-6 ml-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                    </svg>
                    یافتن پزشک متخصص
                </a>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        // Add smooth animations on page load
        document.addEventListener('DOMContentLoaded', function() {
            // Animate header
            const header = document.querySelector('.bg-gradient-to-r.from-green-600');
            if (header) {
                header.style.opacity = '0';
                header.style.transform = 'translateY(-30px)';
                
                setTimeout(() => {
                    header.style.transition = 'all 0.8s ease-out';
                    header.style.opacity = '1';
                    header.style.transform = 'translateY(0)';
                }, 100);
            }

            // Animate consultation cards
            const cards = document.querySelectorAll('.bg-white.rounded-2xl');
            cards.forEach((card, index) => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(50px)';
                
                setTimeout(() => {
                    card.style.transition = 'all 0.8s ease-out';
                    card.style.opacity = '1';
                    card.style.transform = 'translateY(0)';
                }, 300 + (index * 150));
            });

            // Add hover effects to action buttons
            const buttons = document.querySelectorAll('button, a[class*="bg-gradient"]');
            buttons.forEach(button => {
                button.addEventListener('mouseenter', function() {
                    this.style.transform = 'scale(1.05)';
                });
                
                button.addEventListener('mouseleave', function() {
                    this.style.transform = 'scale(1)';
                });
            });

            // Enhanced status badge animations
            const statusBadges = document.querySelectorAll('[class*="bg-white/20"]');
            statusBadges.forEach(badge => {
                badge.addEventListener('mouseenter', function() {
                    this.style.transform = 'scale(1.1)';
                    this.style.transition = 'transform 0.2s ease-out';
                });
                
                badge.addEventListener('mouseleave', function() {
                    this.style.transform = 'scale(1)';
                });
            });
        });

        // Enhanced confirmation dialog for cancel button
        function enhancedConfirm(message) {
            return new Promise((resolve) => {
                const result = confirm(message + '\n\n⚠️ این عمل غیرقابل بازگشت است!');
                resolve(result);
            });
        }

        // Override default confirm for cancel forms
        document.querySelectorAll('form[onsubmit*="confirm"]').forEach(form => {
            form.addEventListener('submit', async function(e) {
                e.preventDefault();
                const confirmed = await enhancedConfirm('آیا از لغو این مشاوره اطمینان دارید؟');
                if (confirmed) {
                    this.submit();
                }
            });
        });
    </script>
}