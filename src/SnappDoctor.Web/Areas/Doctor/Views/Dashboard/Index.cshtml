@model Doctor
@{
    ViewData["Title"] = "داشبورد پزشکی";
}

<div class="px-4 py-6 sm:px-0">
    <!-- Welcome Hero Section -->
    <div class="mb-8">
        <div class="bg-gradient-to-r from-blue-600 via-blue-700 to-indigo-800 rounded-2xl p-8 text-white relative overflow-hidden">
            <!-- Background Pattern -->
            <div class="absolute inset-0 bg-gradient-to-r from-blue-600/20 to-indigo-800/20"></div>
            <div class="absolute top-0 left-0 w-full h-full">
                <svg class="w-full h-full opacity-10" viewBox="0 0 100 100" fill="none">
                    <defs>
                        <pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse">
                            <path d="M 10 0 L 0 0 0 10" fill="none" stroke="currentColor" stroke-width="0.5"/>
                        </pattern>
                    </defs>
                    <rect width="100" height="100" fill="url(#grid)" />
                </svg>
            </div>
            
            <div class="relative z-10">
                <div class="flex flex-col md:flex-row justify-between items-start md:items-center space-y-6 md:space-y-0">
                    <div class="flex items-center space-x-4 space-x-reverse">
                        <div class="w-16 h-16 bg-white/20 rounded-full flex items-center justify-center backdrop-blur-sm">
                            <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                            </svg>
                        </div>
                        <div>
                            <h1 class="text-3xl font-bold">سلام دکتر @Model.FullName</h1>
                            <p class="text-blue-100 mt-1 flex items-center">
                                <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 9.172V5L8 4z"></path>
                                </svg>
                                متخصص @Model.Specialization
                            </p>
                        </div>
                    </div>
                    
                    <!-- Status Toggle -->
                    <div class="status-toggle-container">
                        <form asp-action="UpdateAvailability" method="post" class="inline">
                            <input type="hidden" name="isAvailable" value="@(!Model.IsAvailable)" />
                            <div class="status-toggle @(Model.IsAvailable ? "available" : "offline")">
                                <div class="status-indicator">
                                    <div class="status-pulse @(Model.IsAvailable ? "pulse-green" : "pulse-red")"></div>
                                    <div class="status-dot @(Model.IsAvailable ? "bg-green-400" : "bg-red-400")"></div>
                                </div>
                                <div class="status-content">
                                    <div class="status-title">
                                        @(Model.IsAvailable ? "آنلاین و آماده" : "آفلاین")
                                    </div>
                                    <div class="status-subtitle">
                                        @(Model.IsAvailable ? "پذیرش مشاوره فعال" : "عدم پذیرش مشاوره")
                                    </div>
                                </div>
                                <button type="submit" class="status-button @(Model.IsAvailable ? "bg-red-500 hover:bg-red-600" : "bg-green-500 hover:bg-green-600")">
                                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        @if (Model.IsAvailable)
                                        {
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728L5.636 5.636m12.728 12.728L18.364 5.636M5.636 18.364l12.728-12.728"></path>
                                        }
                                        else
                                        {
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                                        }
                                    </svg>
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
                
                <!-- Welcome Stats Summary -->
                <div class="mt-6 grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div class="bg-white/10 backdrop-blur-sm rounded-lg p-4">
                        <div class="flex items-center space-x-3 space-x-reverse">
                            <div class="w-10 h-10 bg-green-500/20 rounded-lg flex items-center justify-center">
                                <svg class="w-5 h-5 text-green-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                </svg>
                            </div>
                            <div>
                                <div class="text-2xl font-bold">@ViewBag.TodayConsultations</div>
                                <div class="text-blue-100 text-sm">مشاوره امروز</div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="bg-white/10 backdrop-blur-sm rounded-lg p-4">
                        <div class="flex items-center space-x-3 space-x-reverse">
                            <div class="w-10 h-10 bg-yellow-500/20 rounded-lg flex items-center justify-center">
                                <svg class="w-5 h-5 text-yellow-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                </svg>
                            </div>
                            <div>
                                <div class="text-2xl font-bold">@ViewBag.PendingConsultations</div>
                                <div class="text-blue-100 text-sm">در انتظار تأیید</div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="bg-white/10 backdrop-blur-sm rounded-lg p-4">
                        <div class="flex items-center space-x-3 space-x-reverse">
                            <div class="w-10 h-10 bg-purple-500/20 rounded-lg flex items-center justify-center">
                                <svg class="w-5 h-5 text-purple-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
                                </svg>
                            </div>
                            <div>
                                <div class="text-2xl font-bold">@ViewBag.TotalEarnings.ToString("N0")</div>
                                <div class="text-blue-100 text-sm">درآمد کل (تومان)</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Enhanced Statistics Cards -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        <!-- Today's Consultations -->
        <div class="stat-card stat-card-blue group">
            <div class="stat-content">
                <div class="stat-icon-container bg-gradient-to-br from-blue-500 to-blue-600">
                    <svg class="stat-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                    </svg>
                    <div class="stat-pulse blue-pulse"></div>
                </div>
                <div class="stat-details">
                    <div class="stat-number">@ViewBag.TodayConsultations</div>
                    <div class="stat-label">مشاوره‌های امروز</div>
                    <div class="stat-change positive">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"></path>
                        </svg>
                        <span>+12% نسبت به دیروز</span>
                    </div>
                </div>
            </div>
            <div class="stat-progress">
                <div class="stat-progress-bar bg-blue-500" style="width: 65%"></div>
            </div>
        </div>

        <!-- Pending Consultations -->
        <div class="stat-card stat-card-amber group">
            <div class="stat-content">
                <div class="stat-icon-container bg-gradient-to-br from-amber-500 to-orange-500">
                    <svg class="stat-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                    </svg>
                    <div class="stat-pulse amber-pulse"></div>
                </div>
                <div class="stat-details">
                    <div class="stat-number">@ViewBag.PendingConsultations</div>
                    <div class="stat-label">در انتظار تأیید</div>
                    <div class="stat-change urgent">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                        </svg>
                        <span>نیاز به بررسی</span>
                    </div>
                </div>
            </div>
            <div class="stat-progress">
                <div class="stat-progress-bar bg-amber-500" style="width: 80%"></div>
            </div>
        </div>

        <!-- Completed Consultations -->
        <div class="stat-card stat-card-green group">
            <div class="stat-content">
                <div class="stat-icon-container bg-gradient-to-br from-green-500 to-emerald-500">
                    <svg class="stat-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                    </svg>
                    <div class="stat-pulse green-pulse"></div>
                </div>
                <div class="stat-details">
                    <div class="stat-number">@ViewBag.CompletedConsultations</div>
                    <div class="stat-label">تکمیل شده</div>
                    <div class="stat-change positive">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"></path>
                        </svg>
                        <span>98% رضایت کاربران</span>
                    </div>
                </div>
            </div>
            <div class="stat-progress">
                <div class="stat-progress-bar bg-green-500" style="width: 95%"></div>
            </div>
        </div>

        <!-- Total Earnings -->
        <div class="stat-card stat-card-purple group">
            <div class="stat-content">
                <div class="stat-icon-container bg-gradient-to-br from-purple-500 to-violet-600">
                    <svg class="stat-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
                    </svg>
                    <div class="stat-pulse purple-pulse"></div>
                </div>
                <div class="stat-details">
                    <div class="stat-number">@ViewBag.TotalEarnings.ToString("N0")</div>
                    <div class="stat-label">درآمد کل (تومان)</div>
                    <div class="stat-change positive">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"></path>
                        </svg>
                        <span>+25% این ماه</span>
                    </div>
                </div>
            </div>
            <div class="stat-progress">
                <div class="stat-progress-bar bg-purple-500" style="width: 78%"></div>
            </div>
        </div>
    </div>

    <!-- Enhanced Doctor Profile & Quick Actions -->
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8">
        
        <!-- Doctor Profile Card -->
        <div class="lg:col-span-1">
            <div class="profile-card">
                <div class="profile-header">
                    <div class="profile-avatar">
                        <div class="avatar-container">
                            <div class="avatar-placeholder">
                                <svg class="avatar-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                                </svg>
                            </div>
                            <div class="status-badge @(Model.IsAvailable ? "online" : "offline")">
                                <div class="status-dot"></div>
                            </div>
                        </div>
                    </div>
                    <div class="profile-info">
                        <h3 class="profile-name">دکتر @Model.FullName</h3>
                        <p class="profile-specialty">@Model.Specialization</p>
                    </div>
                </div>
                
                <div class="profile-stats">
                    <div class="stat-item">
                        <div class="stat-icon bg-blue-100 text-blue-600">
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                        </div>
                        <div class="stat-content">
                            <div class="stat-value">@Model.YearsOfExperience</div>
                            <div class="stat-label">سال تجربه</div>
                        </div>
                    </div>
                    
                    <div class="stat-item">
                        <div class="stat-icon bg-yellow-100 text-yellow-600">
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"></path>
                            </svg>
                        </div>
                        <div class="stat-content">
                            <div class="stat-value">@Model.Rating</div>
                            <div class="stat-label">امتیاز</div>
                        </div>
                    </div>
                    
                    <div class="stat-item">
                        <div class="stat-icon bg-green-100 text-green-600">
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
                            </svg>
                        </div>
                        <div class="stat-content">
                            <div class="stat-value">@Model.ReviewCount</div>
                            <div class="stat-label">نظرات</div>
                        </div>
                    </div>
                </div>
                
                <div class="profile-actions">
                    <a href="/Doctor/Profile/Edit" class="profile-btn primary">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                        </svg>
                        <span>ویرایش پروفایل</span>
                    </a>
                    <a href="/Doctor/Profile/Analytics" class="profile-btn secondary">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                        </svg>
                        <span>آمار عملکرد</span>
                    </a>
                </div>
            </div>
        </div>

        <!-- Quick Actions Grid -->
        <div class="lg:col-span-2">
            <div class="quick-actions-container">
                <div class="quick-actions-header">
                    <h3 class="quick-actions-title">عملیات سریع</h3>
                    <p class="quick-actions-subtitle">دسترسی آسان به اقدامات مهم</p>
                </div>
                
                <div class="quick-actions-grid">
                    <!-- Pending Consultations -->
                    <a href="/Doctor/Consultations?status=Pending" class="action-card urgent">
                        <div class="action-icon-container">
                            <div class="action-icon bg-amber-500">
                                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                </svg>
                            </div>
                            <div class="action-pulse amber-pulse"></div>
                            @if (ViewBag.PendingConsultations > 0)
                            {
                                <div class="action-badge">@ViewBag.PendingConsultations</div>
                            }
                        </div>
                        <div class="action-content">
                            <div class="action-title">مشاوره‌های در انتظار</div>
                            <div class="action-subtitle">نیاز به بررسی و تأیید</div>
                        </div>
                        <div class="action-arrow">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                            </svg>
                        </div>
                    </a>

                    <!-- Active Consultations -->
                    <a href="/Doctor/Consultations?status=InProgress" class="action-card active">
                        <div class="action-icon-container">
                            <div class="action-icon bg-blue-500">
                                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                                </svg>
                            </div>
                            <div class="action-pulse blue-pulse"></div>
                        </div>
                        <div class="action-content">
                            <div class="action-title">مشاوره‌های فعال</div>
                            <div class="action-subtitle">در حال انجام و پیگیری</div>
                        </div>
                        <div class="action-arrow">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                            </svg>
                        </div>
                    </a>

                    <!-- All Consultations -->
                    <a href="/Doctor/Consultations" class="action-card normal">
                        <div class="action-icon-container">
                            <div class="action-icon bg-green-500">
                                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                                </svg>
                            </div>
                        </div>
                        <div class="action-content">
                            <div class="action-title">همه مشاوره‌ها</div>
                            <div class="action-subtitle">مشاهده کامل تاریخچه</div>
                        </div>
                        <div class="action-arrow">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                            </svg>
                        </div>
                    </a>

                    <!-- Schedule Management -->
                    <a href="/Doctor/Profile/Schedule" class="action-card normal">
                        <div class="action-icon-container">
                            <div class="action-icon bg-purple-500">
                                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                </svg>
                            </div>
                        </div>
                        <div class="action-content">
                            <div class="action-title">مدیریت برنامه</div>
                            <div class="action-subtitle">تنظیم ساعات کاری</div>
                        </div>
                        <div class="action-arrow">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                            </svg>
                        </div>
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Consultations Enhanced -->
    @if (ViewBag.RecentConsultations != null)
    {
        <div class="consultations-container">
            <div class="consultations-header">
                <div class="consultations-title-section">
                    <h3 class="consultations-title">آخرین مشاوره‌ها</h3>
                    <p class="consultations-subtitle">فعالیت‌های اخیر شما</p>
                </div>
                <div class="consultations-actions">
                    <a href="/Doctor/Consultations" class="view-all-btn">
                        <span>مشاهده همه</span>
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                        </svg>
                    </a>
                </div>
            </div>
            
            <div class="consultations-grid">
                @foreach (var consultation in ViewBag.RecentConsultations)
                {
                    <div class="consultation-card @(consultation.Status == ConsultationStatus.Pending ? "pending" : consultation.Status == ConsultationStatus.InProgress ? "active" : "completed")">
                        <div class="consultation-header">
                            <div class="patient-info">
                                <div class="patient-avatar">
                                    <div class="avatar-circle">
                                        <svg class="avatar-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                                        </svg>
                                    </div>
                                    <div class="consultation-type-badge @(consultation.Type.ToString().ToLower())">
                                        @if (consultation.Type.ToString() == "VideoCall")
                                        {
                                            <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                                            </svg>
                                        }
                                        else if (consultation.Type.ToString() == "VoiceCall")
                                        {
                                            <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
                                            </svg>
                                        }
                                        else
                                        {
                                            <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                            </svg>
                                        }
                                    </div>
                                </div>
                                <div class="patient-details">
                                    <div class="patient-name">@consultation.User.FullName</div>
                                    <div class="consultation-type">
                                        @(consultation.Type.ToString() == "VideoCall" ? "تماس تصویری" :
                                          consultation.Type.ToString() == "VoiceCall" ? "تماس صوتی" : "حضوری")
                                    </div>
                                </div>
                            </div>
                            
                            <div class="consultation-status">
                                <div class="status-badge @(consultation.Status.ToString().ToLower())">
                                    <div class="status-indicator"></div>
                                    <span class="status-text">
                                        @(consultation.Status == ConsultationStatus.Completed ? "تکمیل شده" :
                                          consultation.Status == ConsultationStatus.Pending ? "در انتظار" :
                                          consultation.Status == ConsultationStatus.InProgress ? "در حال انجام" :
                                          consultation.Status.ToString())
                                    </span>
                                </div>
                            </div>
                        </div>
                        
                        <div class="consultation-meta">
                            <div class="consultation-time">
                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                </svg>
                                <span>@consultation.CreatedAt.ToLocalTime().ToString("yyyy/MM/dd - HH:mm")</span>
                            </div>
                            
                            @if (consultation.Status == ConsultationStatus.Pending)
                            {
                                <div class="consultation-actions">
                                    <a href="/Doctor/Consultations/Details/@consultation.Id" class="action-btn primary">
                                        پذیرش
                                    </a>
                                    <a href="/Doctor/Consultations/Details/@consultation.Id" class="action-btn secondary">
                                        مشاهده
                                    </a>
                                </div>
                            }
                            else if (consultation.Status == ConsultationStatus.InProgress)
                            {
                                <div class="consultation-actions">
                                    <a href="/Doctor/Consultations/Details/@consultation.Id" class="action-btn active">
                                        ادامه مشاوره
                                    </a>
                                </div>
                            }
                            else
                            {
                                <div class="consultation-actions">
                                    <a href="/Doctor/Consultations/Details/@consultation.Id" class="action-btn outline">
                                        جزئیات
                                    </a>
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
            
            @{
                var consultations = ViewBag.RecentConsultations as IEnumerable<dynamic>;
                bool hasConsultations = consultations != null && consultations.Any();
            }
            
            @if (!hasConsultations)
            {
                <div class="empty-state">
                    <div class="empty-icon">
                        <svg class="w-16 h-16" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M9 5H7a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                        </svg>
                    </div>
                    <div class="empty-title">هنوز مشاوره‌ای وجود ندارد</div>
                    <div class="empty-subtitle">زمانی که بیماران درخواست مشاوره دهند، اینجا نمایش داده می‌شود</div>
                </div>
            }
        </div>
    }
</div>

<style>
    /* Enhanced Dashboard Styles */
    
    /* ===== STATUS TOGGLE STYLES ===== */
    .status-toggle-container {
        position: relative;
    }
    
    .status-toggle {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 16px;
        padding: 16px;
        display: flex;
        align-items: center;
        gap: 16px;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        overflow: hidden;
    }
    
    .status-toggle:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
        border-color: rgba(255, 255, 255, 0.3);
    }
    
    .status-indicator {
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .status-pulse {
        position: absolute;
        width: 12px;
        height: 12px;
        border-radius: 50%;
        animation: pulse 2s infinite;
    }
    
    .pulse-green {
        background-color: #10b981;
    }
    
    .pulse-red {
        background-color: #ef4444;
    }
    
    .status-dot {
        width: 8px;
        height: 8px;
        border-radius: 50%;
        position: relative;
        z-index: 2;
    }
    
    .status-content {
        flex: 1;
        min-width: 0;
    }
    
    .status-title {
        font-weight: 600;
        font-size: 1rem;
        color: white;
        margin-bottom: 2px;
    }
    
    .status-subtitle {
        font-size: 0.875rem;
        color: rgba(255, 255, 255, 0.8);
    }
    
    .status-button {
        padding: 8px 12px;
        border-radius: 12px;
        border: none;
        color: white;
        font-weight: 500;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 8px;
        cursor: pointer;
    }
    
    .status-button:hover {
        transform: scale(1.05);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    }
    
    /* ===== ENHANCED STATISTICS CARDS ===== */
    .stat-card {
        background: white;
        border-radius: 20px;
        padding: 24px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        overflow: hidden;
        border: 1px solid #f1f5f9;
    }
    
    .stat-card:hover {
        transform: translateY(-8px);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.12);
        border-color: transparent;
    }
    
    .stat-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, #3b82f6, #8b5cf6);
        transition: height 0.3s ease;
    }
    
    .stat-card-blue::before { background: linear-gradient(90deg, #3b82f6, #1d4ed8); }
    .stat-card-amber::before { background: linear-gradient(90deg, #f59e0b, #d97706); }
    .stat-card-green::before { background: linear-gradient(90deg, #10b981, #059669); }
    .stat-card-purple::before { background: linear-gradient(90deg, #8b5cf6, #7c3aed); }
    
    .stat-card:hover::before {
        height: 6px;
    }
    
    .stat-content {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 16px;
    }
    
    .stat-icon-container {
        position: relative;
        width: 64px;
        height: 64px;
        border-radius: 16px;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
    }
    
    .stat-icon {
        width: 28px;
        height: 28px;
        color: white;
        z-index: 2;
        position: relative;
    }
    
    .stat-pulse {
        position: absolute;
        width: 64px;
        height: 64px;
        border-radius: 16px;
        animation: iconPulse 3s infinite;
    }
    
    .blue-pulse { background: rgba(59, 130, 246, 0.3); }
    .amber-pulse { background: rgba(245, 158, 11, 0.3); }
    .green-pulse { background: rgba(16, 185, 129, 0.3); }
    .purple-pulse { background: rgba(139, 92, 246, 0.3); }
    
    .stat-details {
        flex: 1;
        margin-left: 20px;
        text-align: right;
    }
    
    .stat-number {
        font-size: 2.5rem;
        font-weight: 800;
        color: #1e293b;
        line-height: 1;
        margin-bottom: 4px;
    }
    
    .stat-label {
        font-size: 1rem;
        color: #64748b;
        font-weight: 500;
        margin-bottom: 8px;
    }
    
    .stat-change {
        display: flex;
        align-items: center;
        gap: 4px;
        font-size: 0.875rem;
        font-weight: 500;
    }
    
    .stat-change.positive {
        color: #10b981;
    }
    
    .stat-change.urgent {
        color: #f59e0b;
    }
    
    .stat-progress {
        height: 4px;
        background: #f1f5f9;
        border-radius: 2px;
        overflow: hidden;
    }
    
    .stat-progress-bar {
        height: 100%;
        border-radius: 2px;
        transition: width 1s ease;
        position: relative;
    }
    
    .stat-progress-bar::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
        animation: progressShimmer 2s infinite;
    }
    
    /* ===== PROFILE CARD STYLES ===== */
    .profile-card {
        background: white;
        border-radius: 24px;
        padding: 32px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.08);
        border: 1px solid #f1f5f9;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }
    
    .profile-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.12);
    }
    
    .profile-header {
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
        margin-bottom: 24px;
    }
    
    .profile-avatar {
        position: relative;
        margin-bottom: 16px;
    }
    
    .avatar-container {
        position: relative;
    }
    
    .avatar-placeholder {
        width: 80px;
        height: 80px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 8px 24px rgba(102, 126, 234, 0.3);
    }
    
    .avatar-icon {
        width: 40px;
        height: 40px;
        color: white;
    }
    
    .status-badge {
        position: absolute;
        bottom: 4px;
        right: 4px;
        width: 24px;
        height: 24px;
        border-radius: 50%;
        border: 3px solid white;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .status-badge.online {
        background: #10b981;
    }
    
    .status-badge.offline {
        background: #ef4444;
    }
    
    .status-badge .status-dot {
        width: 8px;
        height: 8px;
        background: white;
        border-radius: 50%;
        animation: statusPulse 2s infinite;
    }
    
    .profile-name {
        font-size: 1.5rem;
        font-weight: 700;
        color: #1e293b;
        margin-bottom: 4px;
    }
    
    .profile-specialty {
        color: #64748b;
        font-size: 1rem;
    }
    
    .profile-stats {
        display: grid;
        gap: 16px;
        margin-bottom: 24px;
    }
    
    .stat-item {
        display: flex;
        align-items: center;
        gap: 12px;
        padding: 12px;
        background: #f8fafc;
        border-radius: 12px;
        transition: all 0.3s ease;
    }
    
    .stat-item:hover {
        background: #e2e8f0;
        transform: translateX(-4px);
    }
    
    .stat-item .stat-icon {
        width: 40px;
        height: 40px;
        border-radius: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .stat-item .stat-content {
        flex: 1;
        text-align: right;
        margin: 0;
    }
    
    .stat-item .stat-value {
        font-size: 1.25rem;
        font-weight: 700;
        color: #1e293b;
    }
    
    .stat-item .stat-label {
        font-size: 0.875rem;
        color: #64748b;
        margin: 0;
    }
    
    .profile-actions {
        display: flex;
        flex-direction: column;
        gap: 12px;
    }
    
    .profile-btn {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
        padding: 12px 16px;
        border-radius: 12px;
        font-weight: 500;
        text-decoration: none;
        transition: all 0.3s ease;
        border: 2px solid transparent;
    }
    
    .profile-btn.primary {
        background: linear-gradient(135deg, #3b82f6, #1d4ed8);
        color: white;
    }
    
    .profile-btn.primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 20px rgba(59, 130, 246, 0.3);
    }
    
    .profile-btn.secondary {
        background: #f8fafc;
        color: #64748b;
        border-color: #e2e8f0;
    }
    
    .profile-btn.secondary:hover {
        background: #e2e8f0;
        color: #475569;
        border-color: #cbd5e1;
    }
    
    /* ===== QUICK ACTIONS STYLES ===== */
    .quick-actions-container {
        background: white;
        border-radius: 24px;
        padding: 32px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.08);
        border: 1px solid #f1f5f9;
    }
    
    .quick-actions-header {
        margin-bottom: 24px;
    }
    
    .quick-actions-title {
        font-size: 1.5rem;
        font-weight: 700;
        color: #1e293b;
        margin-bottom: 4px;
    }
    
    .quick-actions-subtitle {
        color: #64748b;
        font-size: 1rem;
    }
    
    .quick-actions-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 16px;
    }
    
    .action-card {
        display: flex;
        align-items: center;
        gap: 16px;
        padding: 20px;
        border-radius: 16px;
        text-decoration: none;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        overflow: hidden;
        border: 2px solid #f1f5f9;
    }
    
    .action-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 12px 28px rgba(0, 0, 0, 0.12);
        border-color: transparent;
    }
    
    .action-card.urgent {
        background: linear-gradient(135deg, #fef3c7, #fde68a);
        border-color: #f59e0b;
    }
    
    .action-card.active {
        background: linear-gradient(135deg, #dbeafe, #bfdbfe);
        border-color: #3b82f6;
    }
    
    .action-card.normal {
        background: linear-gradient(135deg, #f0fdf4, #dcfce7);
        border-color: #10b981;
    }
    
    .action-icon-container {
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .action-icon {
        width: 48px;
        height: 48px;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        z-index: 2;
        position: relative;
    }
    
    .action-pulse {
        position: absolute;
        width: 48px;
        height: 48px;
        border-radius: 12px;
        animation: actionPulse 2s infinite;
    }
    
    .action-badge {
        position: absolute;
        top: -8px;
        right: -8px;
        background: #ef4444;
        color: white;
        border-radius: 50%;
        width: 24px;
        height: 24px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 0.75rem;
        font-weight: 600;
        border: 2px solid white;
        z-index: 3;
    }
    
    .action-content {
        flex: 1;
        text-align: right;
    }
    
    .action-title {
        font-size: 1.125rem;
        font-weight: 600;
        color: #1e293b;
        margin-bottom: 4px;
    }
    
    .action-subtitle {
        font-size: 0.875rem;
        color: #64748b;
    }
    
    .action-arrow {
        color: #94a3b8;
        transition: all 0.3s ease;
    }
    
    .action-card:hover .action-arrow {
        color: #475569;
        transform: translateX(-4px);
    }
    
    /* ===== CONSULTATIONS STYLES ===== */
    .consultations-container {
        background: white;
        border-radius: 24px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.08);
        border: 1px solid #f1f5f9;
        overflow: hidden;
    }
    
    .consultations-header {
        padding: 32px 32px 0;
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 24px;
    }
    
    .consultations-title {
        font-size: 1.5rem;
        font-weight: 700;
        color: #1e293b;
        margin-bottom: 4px;
    }
    
    .consultations-subtitle {
        color: #64748b;
        font-size: 1rem;
    }
    
    .view-all-btn {
        display: flex;
        align-items: center;
        gap: 8px;
        padding: 8px 16px;
        background: #f8fafc;
        color: #64748b;
        border-radius: 12px;
        text-decoration: none;
        font-weight: 500;
        transition: all 0.3s ease;
        border: 1px solid #e2e8f0;
    }
    
    .view-all-btn:hover {
        background: #e2e8f0;
        color: #475569;
        transform: translateY(-2px);
    }
    
    .consultations-grid {
        padding: 0 32px 32px;
        display: grid;
        gap: 16px;
    }
    
    .consultation-card {
        background: #f8fafc;
        border-radius: 16px;
        padding: 20px;
        transition: all 0.3s ease;
        border-left: 4px solid #e2e8f0;
    }
    
    .consultation-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);
    }
    
    .consultation-card.pending {
        border-left-color: #f59e0b;
        background: linear-gradient(135deg, #fefbf3, #fef3c7);
    }
    
    .consultation-card.active {
        border-left-color: #3b82f6;
        background: linear-gradient(135deg, #f0f9ff, #dbeafe);
    }
    
    .consultation-card.completed {
        border-left-color: #10b981;
        background: linear-gradient(135deg, #f0fdf4, #dcfce7);
    }
    
    .consultation-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 16px;
    }
    
    .patient-info {
        display: flex;
        align-items: center;
        gap: 12px;
    }
    
    .patient-avatar {
        position: relative;
    }
    
    .avatar-circle {
        width: 48px;
        height: 48px;
        background: linear-gradient(135deg, #667eea, #764ba2);
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .consultation-card .avatar-icon {
        width: 24px;
        height: 24px;
        color: white;
    }
    
    .consultation-type-badge {
        position: absolute;
        bottom: -4px;
        right: -4px;
        width: 20px;
        height: 20px;
        border-radius: 6px;
        display: flex;
        align-items: center;
        justify-content: center;
        border: 2px solid white;
    }
    
    .consultation-type-badge.videocall {
        background: #8b5cf6;
    }
    
    .consultation-type-badge.voicecall {
        background: #3b82f6;
    }
    
    .consultation-type-badge.inperson {
        background: #10b981;
    }
    
    .patient-details {
        text-align: right;
    }
    
    .patient-name {
        font-size: 1.125rem;
        font-weight: 600;
        color: #1e293b;
        margin-bottom: 2px;
    }
    
    .consultation-type {
        font-size: 0.875rem;
        color: #64748b;
    }
    
    .status-badge {
        display: flex;
        align-items: center;
        gap: 6px;
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 0.75rem;
        font-weight: 500;
    }
    
    .status-badge.pending {
        background: #fef3c7;
        color: #92400e;
    }
    
    .status-badge.inprogress {
        background: #dbeafe;
        color: #1e40af;
    }
    
    .status-badge.completed {
        background: #dcfce7;
        color: #166534;
    }
    
    .status-indicator {
        width: 6px;
        height: 6px;
        border-radius: 50%;
        background: currentColor;
    }
    
    .consultation-meta {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 12px;
    }
    
    .consultation-time {
        display: flex;
        align-items: center;
        gap: 6px;
        color: #64748b;
        font-size: 0.875rem;
    }
    
    .consultation-actions {
        display: flex;
        gap: 8px;
    }
    
    .action-btn {
        padding: 6px 12px;
        border-radius: 8px;
        font-size: 0.875rem;
        font-weight: 500;
        text-decoration: none;
        transition: all 0.3s ease;
        border: 1px solid transparent;
    }
    
    .action-btn.primary {
        background: #3b82f6;
        color: white;
    }
    
    .action-btn.primary:hover {
        background: #1d4ed8;
        transform: translateY(-1px);
    }
    
    .action-btn.secondary {
        background: #f1f5f9;
        color: #475569;
        border-color: #e2e8f0;
    }
    
    .action-btn.secondary:hover {
        background: #e2e8f0;
    }
    
    .action-btn.active {
        background: #10b981;
        color: white;
    }
    
    .action-btn.active:hover {
        background: #059669;
    }
    
    .action-btn.outline {
        background: transparent;
        color: #64748b;
        border-color: #cbd5e1;
    }
    
    .action-btn.outline:hover {
        background: #f8fafc;
        color: #475569;
    }
    
    .empty-state {
        text-align: center;
        padding: 64px 32px;
        color: #94a3b8;
    }
    
    .empty-icon {
        margin: 0 auto 16px;
        color: #cbd5e1;
    }
    
    .empty-title {
        font-size: 1.125rem;
        font-weight: 600;
        color: #64748b;
        margin-bottom: 8px;
    }
    
    .empty-subtitle {
        font-size: 0.875rem;
        color: #94a3b8;
        max-width: 300px;
        margin: 0 auto;
        line-height: 1.5;
    }
    
    /* ===== ANIMATIONS ===== */
    @@keyframes pulse {
        0%, 100% { opacity: 1; transform: scale(1); }
        50% { opacity: 0.5; transform: scale(1.2); }
    }
    
    @@keyframes iconPulse {
        0%, 100% { opacity: 0.3; transform: scale(1); }
        50% { opacity: 0.6; transform: scale(1.1); }
    }
    
    @@keyframes actionPulse {
        0%, 100% { opacity: 0.2; transform: scale(1); }
        50% { opacity: 0.4; transform: scale(1.05); }
    }
    
    @@keyframes statusPulse {
        0%, 100% { opacity: 1; }
        50% { opacity: 0.5; }
    }
    
    @@keyframes progressShimmer {
        0% { transform: translateX(-100%); }
        100% { transform: translateX(100%); }
    }
    
    @@keyframes ripple {
        to {
            transform: scale(2);
            opacity: 0;
        }
    }
    
    /* ===== RESPONSIVE DESIGN ===== */
    @@media (max-width: 768px) {
        .status-toggle {
            flex-direction: column;
            text-align: center;
            gap: 12px;
        }
        
        .stat-card {
            padding: 16px;
        }
        
        .stat-number {
            font-size: 2rem;
        }
        
        .profile-card,
        .quick-actions-container,
        .consultations-container {
            padding: 20px;
        }
        
        .quick-actions-grid {
            grid-template-columns: 1fr;
        }
        
        .action-card {
            padding: 16px;
        }
        
        .consultation-header {
            flex-direction: column;
            gap: 12px;
            align-items: flex-start;
        }
        
        .consultation-meta {
            flex-direction: column;
            align-items: flex-start;
        }
    }
    
    @@media (max-width: 640px) {
        .consultations-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 16px;
        }
        
        .consultations-grid,
        .consultations-header {
            padding-left: 16px;
            padding-right: 16px;
        }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Animate statistics cards on page load
        const statCards = document.querySelectorAll('.stat-card');
        statCards.forEach((card, index) => {
            setTimeout(() => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(20px)';
                card.style.transition = 'all 0.6s cubic-bezier(0.4, 0, 0.2, 1)';
                
                setTimeout(() => {
                    card.style.opacity = '1';
                    card.style.transform = 'translateY(0)';
                }, 50);
            }, index * 100);
        });
        
        // Animate progress bars
        setTimeout(() => {
            const progressBars = document.querySelectorAll('.stat-progress-bar');
            progressBars.forEach(bar => {
                const width = bar.style.width;
                bar.style.width = '0%';
                setTimeout(() => {
                    bar.style.width = width;
                }, 100);
            });
        }, 500);
        
        // Add hover effects to action cards
        const actionCards = document.querySelectorAll('.action-card');
        actionCards.forEach(card => {
            card.addEventListener('mouseenter', function() {
                const icon = this.querySelector('.action-icon');
                if (icon) {
                    icon.style.transform = 'scale(1.1) rotate(5deg)';
                }
            });
            
            card.addEventListener('mouseleave', function() {
                const icon = this.querySelector('.action-icon');
                if (icon) {
                    icon.style.transform = 'scale(1) rotate(0deg)';
                }
            });
        });
        
        // Add click ripple effect
        const clickableElements = document.querySelectorAll('.action-card, .profile-btn, .action-btn');
        clickableElements.forEach(element => {
            element.addEventListener('click', function(e) {
                const ripple = document.createElement('div');
                ripple.style.position = 'absolute';
                ripple.style.borderRadius = '50%';
                ripple.style.background = 'rgba(255, 255, 255, 0.6)';
                ripple.style.transform = 'scale(0)';
                ripple.style.animation = 'ripple 0.6s ease-out';
                ripple.style.pointerEvents = 'none';
                
                const rect = this.getBoundingClientRect();
                const size = Math.max(rect.width, rect.height);
                ripple.style.width = ripple.style.height = size + 'px';
                ripple.style.left = (e.clientX - rect.left - size / 2) + 'px';
                ripple.style.top = (e.clientY - rect.top - size / 2) + 'px';
                
                this.style.position = 'relative';
                this.style.overflow = 'hidden';
                this.appendChild(ripple);
                
                setTimeout(() => {
                    if (ripple.parentNode) {
                        ripple.parentNode.removeChild(ripple);
                    }
                }, 600);
            });
        });
        
        // Console log for debugging
        console.log('✅ Dashboard enhancement loaded successfully');
        console.log('📊 Statistics cards:', statCards.length);
        console.log('🎯 Action cards:', actionCards.length);
    });
</script> 